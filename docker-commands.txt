# Docker Commands Reference

## OpenSearch Index Operations

# 1. Delete index
curl -X DELETE "localhost:9200/cataloguesearch_prod"

# 2. Create snapshot repository (if not exists)
curl -X PUT "localhost:9200/_snapshot/my_backup" -H 'Content-Type: application/json' -d'
{
  "type": "fs",
  "settings": {
    "location": "/tmp/snapshots"
  }
}'

# 3. Check snapshot status
curl -X GET "localhost:9200/_snapshot/my_backup/_all"

# 4. Restore from snapshot
curl -X POST "localhost:9200/_snapshot/my_backup/snapshot_1/_restore" -H 'Content-Type: application/json' -d'
{
  "indices": "cataloguesearch_prod",
  "ignore_unavailable": true,
  "include_global_state": false
}'

# 5. Check restore status
curl -X GET "localhost:9200/_cat/recovery/cataloguesearch_prod?v"

# Or check if index exists and document count
curl -X GET "localhost:9200/cataloguesearch_prod/_count"


## Docker Container File Operations

# Copy snapshot files into OpenSearch container
docker cp ./snapshots/snapshot_1 opensearch-node:/tmp/snapshots/

# Copy files from host to container
docker cp /local/path/file container_name:/container/path/

# Copy files from container to host  
docker cp container_name:/container/path/file /local/path/

## Docker Container Management

# Check running containers
docker ps

# Check container logs
docker logs container_name -f

# Execute command in container
docker exec -it container_name /bin/bash

# Check disk usage
docker system df

# Clean up unused images/containers
docker system prune -a

## Container Performance Monitoring

# Real-time container stats (CPU, Memory, Network, Disk I/O)
docker stats

# Stats for specific container
docker stats cataloguesearch-api

# One-time stats snapshot
docker stats --no-stream

# Detailed memory usage inside container
docker exec -it container_name free -h

# Check disk usage inside container
docker exec -it container_name df -h

# Check disk usage of specific directory (e.g., model cache)
docker exec -it cataloguesearch-api du -sh /app/data/.cache/huggingface/

# Monitor disk I/O during query execution
sudo iotop -a -o -d 1

# Monitor system resources during query
htop

# Check container processes
docker exec -it container_name ps aux

# Monitor container logs during query execution
docker logs cataloguesearch-api --tail 100 -f

# Check container resource limits
docker inspect container_name | grep -i memory
docker inspect container_name | grep -i cpu
